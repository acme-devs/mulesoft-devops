name: 'Get configuration file'
description: 'Get the configuration file for the service defined in pom.xml'
inputs:
  file: 
    required: true
    description: File to download
  checkIfExists:
    required: true
    default: "true"
    description: Verify if file exists

runs:
  using: "composite"
  steps:
    
    - id: configuration
      name: Get configuration for the service 
      shell: bash
      run: |
        echo " "
        echo "*********************************************"
        echo "Get configuration file"
        echo "*********************************************"
        echo " "
        echo "  github_automationbot_token: $github_automationbot_token"
        echo "  inputs.file: ${{ inputs.file }}"
        listFiles="${{ inputs.file }}"
        for readFile in $listFiles
        do
          echo "  "
          echo "  Getting the file: $readFile"
          urlconfigurationfile="https://raw.githubusercontent.com/${{ github.repository_owner }}/$CONFIGURATIONS_REPOSITORY/main/$readFile"
          echo "  URL of file: $urlconfigurationfile"
          configurationdata=$(curl -sH "Authorization: token $github_automationbot_token" $urlconfigurationfile)
          echo -e "  File content (first 100 chars): \n${configurationdata:0:100}...." 
          echo "  "

          # Verify if configuration file was found
          if [[ "$configurationdata" != *"Not Found"* ]]; then
            echo "  The file was found"
            echo "$configurationdata" > $readFile
          else
            if [[ ${{ inputs.checkIfExists }} == "true" ]]; then
              echo "  File not found, aborting the pipeline"
              exit 1
            else
              echo "  File not found, returning an empty file"
              touch $readFile
            fi
          fi

          echo "  Create the env variable configuration_data with the content of the file"
          echo "configuration_data=$(echo $configurationdata)" >> $GITHUB_ENV
        done
        echo " "