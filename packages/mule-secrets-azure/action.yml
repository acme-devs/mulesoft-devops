name: Get secrets from Azure Key Vault
description: Get secrets from Azure Key Vault
inputs:
  keyvault-key:
    required: true
    description: The name of the KeyVault
  azure-credentials:
    required: true
    description: Azure Credentials for login

runs:
  using: "composite"
  steps:

    - name: Debug action variables
      shell: bash
      run: |
        echo " "
        echo "*********************************************"      
        echo "Debug action variables"
        echo "*********************************************"
        echo " "
        tempvar=$( echo "${{ inputs.azure-credentials }}" | sed 's/./& /g' )
        echo "  azure-credentials: ${{ inputs.azure-credentials }}"
        echo "  keyvault-key: ${{ inputs.keyvault-key }}"
        echo "  global_configuration: ${{ env.GLOBAL_CONFIGURATION }}"
        echo " "

    - name: Authentication with Azure
      uses: azure/login@v2
      with:
        creds: ${{ inputs.azure-credentials }}
        
    - name: Test Azure CLI
      shell: bash
      run: |
        echo "  "
        echo "  az version"
        az version
        echo "  "
        echo "  az webapp"
        az webapp list --query "[?state=='Running']"

    - name: Get configuration files
      uses: acme-devs/mulesoft-devops/packages/mule-getfile@main
      with:
        file: ${{ env.GLOBAL_CONFIGURATION }}
        checkIfExists: true

    - name: Get secrets configuration
      shell: bash
      run: |
        echo " "
        echo "*****************************************************"
        echo "Parse the secrets from the global configuration file"
        echo "*****************************************************"
        echo " "

        pathdata=""
        function parse_yaml {
          pathdata=$(cat "${{ env.GLOBAL_CONFIGURATION }}" | yq -r "$1")
          if [ "$pathdata" = "null" ] ; then
            echo " The yaml section was not found in the configuration file, section=$1"
            exit 1
          fi
        }
        
        echo " "
        parse_yaml '.secrets_azure'
        secrets_azure=$(echo "$pathdata")
        echo "  secrets_azure: $secrets_azure"
        echo " "

        service_configuration_lines=$( echo $secrets_azure | tr ' ' '\n' )
        echo -e "  Configuration formated:\n$service_configuration_lines "
        echo " "

        echo "  Variables found: "
        echo "$service_configuration_lines" | while read p; do
            # Get variable and value
            line=$(echo "$p")
            variable="$(cut -d'=' -f1 <<<$line)"
            secret_name="$(cut -d'=' -f2 <<< $line)"
            echo "    - variable: "$variable
            echo "      secret_name: "$secret_name

            value=$(az keyvault secret show --name $secret_name --vault-name ${{ inputs.keyvault-key }} --query value --output tsv)
            echo "::add-mask::$value"
            echo "      Azure:$value"
            echo "$variable=$value" >> $GITHUB_ENV
        done